---
description: Code Style Rules for Cloud Capture
globs: src/**/*.{ts,tsx}
---
# Code Style Rules

## Style Standards
```typescript
{
  "styleRules": {
    "formatting": {
      "indentation": "spaces",
      "indentSize": 2,
      "maxLineLength": 80,
      "trailingComma": "es5",
      "quoteStyle": "single",
      "semicolons": true
    },
    "naming": {
      "components": "PascalCase",
      "hooks": "usePrefix",
      "utils": "camelCase",
      "constants": "UPPER_SNAKE_CASE",
      "stores": "camelCase", // Added store naming
      "routes": "kebab-case", // Added route naming
      "files": {
        "components": "{ComponentName}.tsx",
        "hooks": "use{hookName}.ts",
        "utils": "{utilName}.ts",
        "types": "{typeName}.types.ts",
        "stores": "{storeName}.store.ts",
        "routes": "page.tsx", // Added route file naming
        "layouts": "layout.tsx", // Added layout file naming
        "loading": "loading.tsx", // Added loading file naming
        "error": "error.tsx" // Added error file naming
      }
    },
    "organization": {
      "imports": [
        "react",
        "next",
        "external",
        "components",
        "hooks",
        "stores", // Added stores imports
        "utils",
        "types",
        "styles"
      ],
      "componentStructure": [
        "imports",
        "types",
        "constants",
        "helpers",
        "hooks", // Added hooks
        "store", // Added store
        "component",
        "exports"
      ],
      "directories": {
        "src": {
          "app": {
            "auth": "Authentication routes",
            "dashboard": "Protected dashboard routes",
            "events": "Event management routes",
            "settings": "User settings routes"
          },
          "components": {
            "auth": "Authentication components",
            "ui": "Shadcn UI components",
            "shared": "Shared components",
            "forms": "Form components"
          },
          "lib": {
            "utils": "Utility functions",
            "supabase": "Supabase client",
            "validation": "Zod schemas"
          },
          "hooks": "Custom hooks",
          "types": "TypeScript types",
          "styles": "CSS/Tailwind styles",
          "services": "API services",
          "store": "Zustand stores",
          "middleware": "Route middleware"
        }
      }
    },
    "comments": {
      "required": {
        "components": "TSDoc for props interface",
        "hooks": "TSDoc for parameters and return",
        "utils": "TSDoc for functions",
        "types": "TSDoc for type definitions"
      }
    }
  }
}