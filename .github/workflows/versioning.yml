name: Versioning and Release Management

# Add workflow-level permissions
permissions:
  contents: read # Base read permission for all jobs
  pull-requests: write # Needed for creating PRs
  issues: write # Needed for commenting on PRs

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  version-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check version consistency
        run: |
          # Extract versions
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          README_VERSION=$(grep -o 'version-[0-9.]*-blue' README.md | cut -d'-' -f2)
          AI_GUIDELINES_VERSION=$(grep -o '"version": "[0-9.]*"' docs/ai-collaboration-guidelines.mdc | cut -d'"' -f4)
          
          echo "Found versions:"
          echo "package.json: $PACKAGE_VERSION"
          echo "README.md: $README_VERSION"
          echo "ai-collaboration-guidelines.mdc: $AI_GUIDELINES_VERSION"
          
          # Compare versions
          if [ "$PACKAGE_VERSION" != "$README_VERSION" ] || [ "$PACKAGE_VERSION" != "$AI_GUIDELINES_VERSION" ]; then
            echo "❌ Version mismatch found!"
            echo "All versions must match package.json version: $PACKAGE_VERSION"
            exit 1
          fi
          
          echo "✅ All versions match: $PACKAGE_VERSION"

      - name: Verify changelog
        run: |
          if ! grep -q "## \[Unreleased\]" CHANGELOG.md; then
            echo "❌ Error: CHANGELOG.md must contain an [Unreleased] section"
            exit 1
          fi
          echo "✅ CHANGELOG.md format verified"

  version-bump:
    needs: version-check
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Install dependencies
        run: npm ci

      - name: Update version
        id: bump_version
        run: |
          VERSION_TYPE=${{ github.event.inputs.version_type }}
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Bump version
          npm version $VERSION_TYPE -m "chore(release): bump version to %s"
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          
          # Update README.md version badge
          sed -i "s/version-[0-9.]*-blue/version-${NEW_VERSION}-blue/" README.md
          
          # Update AI guidelines version
          sed -i "s/\"version\": \"[0-9.]*\"/\"version\": \"${NEW_VERSION}\"/" docs/ai-collaboration-guidelines.mdc
          
          # Update CHANGELOG.md
          DATE=$(date +%Y-%m-%d)
          sed -i "s/## \[Unreleased\]/## [Unreleased]\n\n## [$NEW_VERSION] - $DATE/" CHANGELOG.md
          
          # Update version links in CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "[Unreleased]: https://github.com/${{ github.repository }}/compare/v$NEW_VERSION...HEAD" >> CHANGELOG.md
          echo "[$NEW_VERSION]: https://github.com/${{ github.repository }}/releases/tag/v$NEW_VERSION" >> CHANGELOG.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          title: '🔖 chore(release): prepare release ${{ steps.bump_version.outputs.new_version }}'
          body: |
            # 🚀 Release Preparation v${{ steps.bump_version.outputs.new_version }}
            
            ## 📝 Changes
            - Version bump in package.json
            - Updated version badge in README.md
            - Updated version in AI guidelines
            - Updated CHANGELOG.md
            - Updated version links
            
            ## ✅ Checklist
            - [ ] Review version numbers
            - [ ] Review CHANGELOG.md
            - [ ] Review documentation updates
            
            Please review the changes and merge if everything looks correct.
          branch: release/v${{ steps.bump_version.outputs.new_version }}
          base: main
          labels: release
          commit-message: 'chore(release): prepare release ${{ steps.bump_version.outputs.new_version }}'

  create-release:
    needs: version-bump
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: 🎉 Release v${{ steps.get_version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false 